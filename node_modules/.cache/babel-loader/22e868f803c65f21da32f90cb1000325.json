{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Component } from \"react\";\n\nfunction Restaurantes() {\n  _s();\n\n  const [restaurante, setRestaurante] = useState([]);\n  const [dias, setDia] = useState([]);\n  useEffect(() => {\n    obtenerDatos();\n    obtenerDia();\n  }, []);\n\n  const obtenerDatos = async () => {\n    const data = await fetch(\"http://hoteloasis.vicentealdhair.com/api/oasis/centro_consumo\");\n    const restaurantes = await data.json();\n    const categoria = restaurantes.filter(categorias => categorias.categoria_id == 2);\n    setRestaurante(categoria);\n  };\n\n  const obtenerDia = async () => {\n    const horarios = await fetch(\"http://hoteloasis.vicentealdhair.com/api/oasis/centro_consumo/horario\");\n    var fecha = new Date();\n    var diahoy = fecha.getDay();\n    var horahoy = fecha.getHours();\n    if (horahoy < 10) horahoy = '0' + horahoy;\n    var minutoshoy = fecha.getMinutes();\n    var segundoshoy = fecha.getSeconds();\n    var horactual = horahoy + \":\" + minutoshoy + \":\" + segundoshoy;\n    /*      console.log(horactual); */\n\n    const fechas = await horarios.json();\n    const buscardia = fechas.filter(hoy => hoy.dia == diahoy && hoy.hora_inicio < horactual && hoy.hora_final > horactual);\n    setDia(buscardia);\n  };\n\n  let json1 = dias;\n  let json2 = restaurante;\n  let unidos = json2.concat(json1);\n  let talvez = unidos.filter(datos => datos.centro_consumo_id);\n  /*   console.log(json1.length) */\n\n  /* while(json2.length<=1){\r\n  console.log(\"hola\")\r\n  } */\n\n  class Restaurantes extends Component {\n    render() {\n      const {\n        handleSearch\n      } = this.props;\n    }\n\n  }\n}\n\n_s(Restaurantes, \"WpxQ0Oz0OLYrPBfvEYwVQs7ugX4=\");\n\n_c = Restaurantes;\nexport default Restaurantes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurantes\");","map":{"version":3,"sources":["C:/vista/hoteloasis/src/components/Restaurantes.jsx"],"names":["React","useEffect","useState","Component","Restaurantes","restaurante","setRestaurante","dias","setDia","obtenerDatos","obtenerDia","data","fetch","restaurantes","json","categoria","filter","categorias","categoria_id","horarios","fecha","Date","diahoy","getDay","horahoy","getHours","minutoshoy","getMinutes","segundoshoy","getSeconds","horactual","fechas","buscardia","hoy","dia","hora_inicio","hora_final","json1","json2","unidos","concat","talvez","datos","centro_consumo_id","render","handleSearch","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,IAAD,EAAOC,MAAP,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,YAAY;AACZC,IAAAA,UAAU;AACX,GAHQ,EAGN,EAHM,CAAT;;AAIA,QAAMD,YAAY,GAAG,YAAY;AAC/B,UAAME,IAAI,GAAG,MAAMC,KAAK,CACtB,+DADsB,CAAxB;AAGA,UAAMC,YAAY,GAAG,MAAMF,IAAI,CAACG,IAAL,EAA3B;AACA,UAAMC,SAAS,GAAGF,YAAY,CAACG,MAAb,CAChBC,UAAU,IAAIA,UAAU,CAACC,YAAX,IAA2B,CADzB,CAAlB;AAGAZ,IAAAA,cAAc,CAACS,SAAD,CAAd;AACD,GATD;;AAUA,QAAML,UAAU,GAAG,YAAY;AAC7B,UAAMS,QAAQ,GAAG,MAAMP,KAAK,CAC1B,uEAD0B,CAA5B;AAGA,QAAIQ,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAIC,MAAM,GAAGF,KAAK,CAACG,MAAN,EAAb;AACA,QAAIC,OAAO,GAAGJ,KAAK,CAACK,QAAN,EAAd;AACA,QAAID,OAAO,GAAG,EAAd,EAAmBA,OAAO,GAAG,MAAIA,OAAd;AACnB,QAAIE,UAAU,GAAGN,KAAK,CAACO,UAAN,EAAjB;AACA,QAAIC,WAAW,GAAGR,KAAK,CAACS,UAAN,EAAlB;AACA,QAAIC,SAAS,GAAGN,OAAO,GAAE,GAAT,GAAeE,UAAf,GAA4B,GAA5B,GAAkCE,WAAlD;AACD;;AACC,UAAMG,MAAM,GAAG,MAAMZ,QAAQ,CAACL,IAAT,EAArB;AACA,UAAMkB,SAAS,GAAGD,MAAM,CAACf,MAAP,CAAciB,GAAG,IAAEA,GAAG,CAACC,GAAJ,IAASZ,MAAT,IAAmBW,GAAG,CAACE,WAAJ,GAAgBL,SAAnC,IAA8CG,GAAG,CAACG,UAAJ,GAAeN,SAAhF,CAAlB;AACAtB,IAAAA,MAAM,CAACwB,SAAD,CAAN;AACD,GAfD;;AAgBA,MAAIK,KAAK,GAAC9B,IAAV;AACA,MAAI+B,KAAK,GAACjC,WAAV;AACA,MAAIkC,MAAM,GAAED,KAAK,CAACE,MAAN,CAAaH,KAAb,CAAZ;AACA,MAAII,MAAM,GAAEF,MAAM,CAACvB,MAAP,CAAc0B,KAAK,IAAEA,KAAK,CAACC,iBAA3B,CAAZ;AACF;;AACA;AACA;AACA;;AACA,QAAMvC,YAAN,SAA2BD,SAA3B,CAAoC;AAClCyC,IAAAA,MAAM,GAAE;AACN,YAAK;AAACC,QAAAA;AAAD,UAAe,KAAKC,KAAzB;AAED;;AAJiC;AAQnC;;GAjDQ1C,Y;;KAAAA,Y;AAmDT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState, Component } from \"react\";\r\n\r\nfunction Restaurantes() {\r\n  const [restaurante, setRestaurante] = useState([]);\r\n  const [dias, setDia] = useState([]);\r\n  useEffect(() => {\r\n    obtenerDatos()\r\n    obtenerDia()\r\n  }, []);\r\n  const obtenerDatos = async () => {\r\n    const data = await fetch(\r\n      \"http://hoteloasis.vicentealdhair.com/api/oasis/centro_consumo\"\r\n    );\r\n    const restaurantes = await data.json();\r\n    const categoria = restaurantes.filter(\r\n      categorias => categorias.categoria_id == 2\r\n    );\r\n    setRestaurante(categoria);\r\n  };\r\n  const obtenerDia = async () => {\r\n    const horarios = await fetch(\r\n      \"http://hoteloasis.vicentealdhair.com/api/oasis/centro_consumo/horario\"\r\n    );\r\n    var fecha = new Date();\r\n    var diahoy = fecha.getDay();\r\n    var horahoy = fecha.getHours();\r\n    if (horahoy < 10)  horahoy = '0'+horahoy;\r\n    var minutoshoy = fecha.getMinutes();\r\n    var segundoshoy = fecha.getSeconds();\r\n    var horactual = horahoy+ \":\" + minutoshoy + \":\" + segundoshoy;\r\n   /*      console.log(horactual); */\r\n    const fechas = await horarios.json();\r\n    const buscardia = fechas.filter(hoy=>hoy.dia==diahoy && hoy.hora_inicio<horactual&&hoy.hora_final>horactual);\r\n    setDia(buscardia);\r\n  };\r\n  let json1=dias;\r\n  let json2=restaurante;\r\n  let unidos= json2.concat(json1);\r\n  let talvez= unidos.filter(datos=>datos.centro_consumo_id)\r\n/*   console.log(json1.length) */\r\n/* while(json2.length<=1){\r\nconsole.log(\"hola\")\r\n} */\r\nclass Restaurantes extends Component{\r\n  render(){\r\n    const{handleSearch}=this.props\r\n    \r\n  }\r\n}\r\n\r\n  \r\n}\r\n\r\nexport default Restaurantes;\r\n"]},"metadata":{},"sourceType":"module"}